#!/usr/bin/env bash
# .xprofile

# Disable touchpad while typing
if [[ -x "$(command -v syndaemon)" ]] ; then {
        syndaemon -d -i 1 -m 100 -K
} fi

# Multiple monitor configuration
# REFACTOR: this should be done by checking if the laptop is at home by 
# REFACTOR: seeing if the display information matches
# REFACTOR: should this be in its own script?
NUM_MONITORS=$(xrandr --listmonitors | sed 's/[^0-9]//g' | head -n 1)
if (( NUM_MONITORS == 2 )) ; then { 
        source "$HOME/bin/monitors.bash"
} fi

# Pywal colorscheme and wallpaper selection
if [[ -x "$(command -v wal)" ]] ; then {
       
        # Use old cached wallpaper to generate a colorscheme
        WAL_CACHE="$HOME/.cache/wal/wal_cache"
        command wal --saturate 0.4 --cols16 -nq -i "$(cat "$WAL_CACHE")"

        # Select new random wallpaper and cache it
        WALLPAPER_DIR="$HOME/Pictures/wallpapers/4k/space"
        WALLPAPER="$WALLPAPER_DIR/$(command ls "$WALLPAPER_DIR" --recursive | shuf | head -n 1)"
        echo "$WALLPAPER" >| "$WAL_CACHE"

        # Copy the image to /usr/share/backgrounds so that LightDM can use it
        WALLPAPER_CACHE="/usr/share/backgrounds/wal"
        command cp --no-preserve=mode,ownership "$WALLPAPER" "$WALLPAPER_CACHE"

        # Apply pywal colorscheme to Zathura 
        if [[ -x "$(command -v zathura)" ]] && [[ -e "$HOME/.cache/wal/zathurarc" ]] ; then { 
                command cp "$HOME/.cache/wal/zathurarc" "$HOME/.config/zathura/zathurarc"
        } fi

        # Apply colorscheme to CAVA
        if [[ -x "$(command -v cava)" ]] && [[ -e "$HOME/.cache/wal/cava" ]] ; then {
                command cp "$HOME/.cache/wal/cava" "$HOME/.config/cava/config"
        } fi
        
        # Apply colorscheme to AERC
        if [[ -x "$(command -v aerc)" ]] && [[ -e "$HOME/.cache/wal/aerc" ]] ; then {
                command cp "$HOME/.cache/wal/aerc" "$HOME/.config/aerc/stylesets/wal"
        } fi
        
        # Apply pywal colorscheme to Firefox
        if [[ -x "$(command -v pywalfox)" ]] ; then {
                command pywalfox update
        } fi

        # Apply pywal colorscheme to KiCad
        if [[ -f ~/Projects/kicad/kicad-scripts/kiwal.py ]] ; then {
                command python ~/Projects/kicad/kicad-scripts/kiwal.py
        } fi
        
} fi

